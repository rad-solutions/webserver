name: Dev Workflow - Ephemeral DB

on:
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  provision-ephemeral-db:
    name: Provision Ephemeral DB from Prod Snapshot
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      PROD_DB_INSTANCE_IDENTIFIER: "radsolutions-db"
      AWS_ACCOUNT_ID: 978368259161

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActions-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate unique identifiers for this run
        id: identifiers
        run: |
          TIMESTAMP=$(date +%s)
          SNAPSHOT_ID="snapshot-dev-${{ github.sha }}-${TIMESTAMP}"
          TEMP_DB_ID="temp-db-dev-${{ github.sha }}-${TIMESTAMP}"
          echo "snapshot_id=$SNAPSHOT_ID" >> $GITHUB_OUTPUT
          echo "temp_db_id=$TEMP_DB_ID" >> $GITHUB_OUTPUT
          echo "Generated Snapshot ID: $SNAPSHOT_ID"
          echo "Generated Temp DB ID: $TEMP_DB_ID"

      - name: Create DB Snapshot from Production
        run: |
            echo "Starting snapshot of ${{ env.PROD_DB_INSTANCE_IDENTIFIER }}..."
            aws rds create-db-snapshot \
              --db-instance-identifier ${{ env.PROD_DB_INSTANCE_IDENTIFIER }} \
              --db-snapshot-identifier ${{ steps.identifiers.outputs.snapshot_id }} \
              --tags Key=SourceWorkflow,Value="${{ github.workflow }}" Key=CommitSHA,Value=${{ github.sha }}

            echo "Waiting for snapshot to be available..."
            aws rds wait db-snapshot-available --db-snapshot-identifier ${{ steps.identifiers.outputs.snapshot_id }}
            echo "Snapshot ${{ steps.identifiers.outputs.snapshot_id }} is available."

      - name: Restore DB Instance from Snapshot
        run: |
            echo "Restoring snapshot to a new temporary DB instance..."
            aws rds restore-db-instance-from-db-snapshot \
              --db-instance-identifier ${{ steps.identifiers.outputs.temp_db_id }} \
              --db-snapshot-identifier ${{ steps.identifiers.outputs.snapshot_id }} \
              --db-instance-class db.t3.micro \
              --no-publicly-accessible \
              --tags Key=SourceWorkflow,Value="${{ github.workflow }}" Key=CommitSHA,Value=${{ github.sha }}

            echo "Waiting for temporary DB instance to be available..."
            aws rds wait db-instance-available --db-instance-identifier ${{ steps.identifiers.outputs.temp_db_id }}

            DB_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier ${{ steps.identifiers.outputs.temp_db_id }} --query "DBInstances[0].Endpoint.Address" --output text)
            echo "Temporary DB is available at: $DB_ENDPOINT"
            echo "You will need to manage its deletion to avoid costs."
