# Generated by Django 5.2 on 2025-06-09 12:00

from django.db import migrations

# Define constants for process types and practice categories
ASESORIA = "asesoria"
MEDICA_CAT1 = "medica_cat1"
MEDICA_CAT2 = "medica_cat2"


def correct_percentages(apps, schema_editor):
    ChecklistItemDefinition = apps.get_model("app", "ChecklistItemDefinition")
    db_alias = schema_editor.connection.alias

    # Correct percentages for Asesoría - Médica Categoría 1
    # Target: 16 items, sum to 100%. (4 items @ 7%, 12 items @ 6%)
    medica_cat1_items = list(
        ChecklistItemDefinition.objects.using(db_alias)
        .filter(process_type=ASESORIA, practice_category=MEDICA_CAT1)
        .order_by("order")
    )

    if len(medica_cat1_items) == 16:  # Apply only if the count matches expected
        for i, item in enumerate(medica_cat1_items):
            if i < 4:  # First 4 items
                item.percentage = 7
            else:  # Remaining 12 items
                item.percentage = 6
            item.save(using=db_alias)
    elif medica_cat1_items:  # If items exist but count doesn't match, print a warning
        print(
            f"\nWarning: Expected 16 items for {ASESORIA}-{MEDICA_CAT1}, found {len(medica_cat1_items)}. Percentages not adjusted automatically."
        )

    # Correct percentages for Asesoría - Médica Categoría 2
    # Target: 19 items, sum to 100%. (5 items @ 6%, 14 items @ 5%)
    medica_cat2_items = list(
        ChecklistItemDefinition.objects.using(db_alias)
        .filter(process_type=ASESORIA, practice_category=MEDICA_CAT2)
        .order_by("order")
    )

    if len(medica_cat2_items) == 19:  # Apply only if the count matches expected
        for i, item in enumerate(medica_cat2_items):
            if i < 5:  # First 5 items
                item.percentage = 6
            else:  # Remaining 14 items
                item.percentage = 5
            item.save(using=db_alias)
    elif medica_cat2_items:  # If items exist but count doesn't match, print a warning
        print(
            f"\nWarning: Expected 19 items for {ASESORIA}-{MEDICA_CAT2}, found {len(medica_cat2_items)}. Percentages not adjusted automatically."
        )


def revert_percentages(apps, schema_editor):
    ChecklistItemDefinition = apps.get_model("app", "ChecklistItemDefinition")
    db_alias = schema_editor.connection.alias

    # Revert Asesoría - Médica Categoría 1 items to their original 6%
    # This assumes all 16 items were originally 6%
    ChecklistItemDefinition.objects.using(db_alias).filter(
        process_type=ASESORIA, practice_category=MEDICA_CAT1
    ).update(percentage=6)

    # Revert Asesoría - Médica Categoría 2 items to their original 5%
    # This assumes all 19 items were originally 5%
    ChecklistItemDefinition.objects.using(db_alias).filter(
        process_type=ASESORIA, practice_category=MEDICA_CAT2
    ).update(percentage=5)


class Migration(migrations.Migration):

    dependencies = [
        (
            "app",
            "0015_alter_checklistitemdefinition_options",
        ),  # Ensure this is your last migration
    ]

    operations = [
        migrations.RunPython(correct_percentages, revert_percentages),
    ]
