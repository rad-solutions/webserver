# Generated by Django 5.2 on 2025-07-07 18:00

from django.db import migrations, models

# Define constants for new process types and categories
ESTUDIO_AMBIENTAL = "estudio_ambiental"
CAT1 = "cat1"
CAT2 = "cat2"


def populate_new_checklist_definitions(apps, schema_editor):
    """Populate new checklist item definitions for 'Estudio Ambiental'."""
    ChecklistItemDefinition = apps.get_model("app", "ChecklistItemDefinition")

    # First, clean up the old 'asesoria' definitions for 'veterinaria' and 'industrial'
    ChecklistItemDefinition.objects.filter(
        process_type="asesoria",
        practice_category__in=["veterinaria", "industrial"],
    ).delete()

    # Definitions for Estudio Ambiental - Categoría 1
    items_cat1 = [
        "CARTA SOLICITUD DE LICENCIA (Bogotá no)",
        "ANEXO 4",
        "RUT",
        "CÉDULA Y DIPLOMAS EPR",
        "PROGRAMA DE PROTECCIÓN RADIOLÓGICA",
        "ESTUDIO AMBIENTAL",
        "ESTUDIO MEDIO AMBIENTAL",
        "CÁLCULO DE BLINDAJES",
        "PROGRAMA DE VIGILANCIA POST MERCADO",
        "CERTIFICADO DE CURSO DE PROTECCIÓN RADIOLÓGICA TOES",
        "CONSTANCIA ASISTENCIA A CURSO SOBRE MANEJO DE EQUIPOS RX",
        "PROGRAMA DE CAPACITACIÓN EN PROTECCIÓN RADIOLÓGICA",
        "CERTIFICADO DE DOSIMETRÍA",
        "HOJA DE VIDA DEL EQUIPO/MANTENIMIENTO/FICHA TECNICA/MANUAL DE USUARIO / REGISTRO DE IMPORTACIÓN",
        "LICENCIA ANTERIOR/PUESTA EN MARCHA O PRUEBAS INICIALES",
        "PLANO GENERAL",
    ]

    # Distribute percentages for 16 items (4 items @ 7%, 12 items @ 6%)
    for idx, name in enumerate(items_cat1, 1):
        percentage = 7 if idx <= 4 else 6
        ChecklistItemDefinition.objects.get_or_create(
            process_type=ESTUDIO_AMBIENTAL,
            practice_category=CAT1,
            name=name,
            defaults={"order": idx, "percentage": percentage},
        )

    # Definitions for Estudio Ambiental - Categoría 2 (Cat 1 items + 1 extra)
    items_cat2 = items_cat1 + ["EVALUACIÓN DE EMERGENCIAS."]
    # Distribute percentages for 17 items (15 items @ 6%, 2 items @ 5%)
    for idx, name in enumerate(items_cat2, 1):
        percentage = 5 if idx <= 2 else 6
        ChecklistItemDefinition.objects.get_or_create(
            process_type=ESTUDIO_AMBIENTAL,
            practice_category=CAT2,
            name=name,
            defaults={"order": idx, "percentage": percentage},
        )


def revert_new_checklist_definitions(apps, schema_editor):
    """Revert the changes, deleting the new definitions.

    Note: This does not restore the old 'asesoria' definitions.
    """
    ChecklistItemDefinition = apps.get_model("app", "ChecklistItemDefinition")
    ChecklistItemDefinition.objects.filter(process_type=ESTUDIO_AMBIENTAL).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0018_historialtuborayosx"),
    ]

    operations = [
        # 1. Update the choices for ProcessTypeChoices and PracticeCategoryChoices
        migrations.AlterField(
            model_name="process",
            name="process_type",
            field=models.CharField(
                choices=[
                    ("calculo_blindajes", "Cálculo de Blindajes"),
                    ("control_calidad", "Control de Calidad"),
                    ("estudio_ambiental", "Estudio Ambiental"),
                    ("asesoria", "Asesoría"),
                    ("otro", "Otro"),
                ],
                default="otro",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="process",
            name="practice_category",
            field=models.CharField(
                blank=True,
                choices=[
                    ("cat1", "Categoría 1"),
                    ("cat2", "Categoría 2"),
                    ("cat3", "Categoría 3"),
                    ("medica_cat1", "Médica Categoría 1"),
                    ("medica_cat2", "Médica Categoría 2"),
                    ("medica_cat3", "Médica Categoría 3"),
                ],
                max_length=30,
                null=True,
                verbose_name="Categoría de Práctica",
            ),
        ),
        migrations.AlterField(
            model_name="checklistitemdefinition",
            name="practice_category",
            field=models.CharField(
                blank=True,
                choices=[
                    ("cat1", "Categoría 1"),
                    ("cat2", "Categoría 2"),
                    ("cat3", "Categoría 3"),
                    ("medica_cat1", "Médica Categoría 1"),
                    ("medica_cat2", "Médica Categoría 2"),
                    ("medica_cat3", "Médica Categoría 3"),
                ],
                max_length=30,
                null=True,
                verbose_name="Categoría de Práctica",
            ),
        ),
        # 2. Run the Python script to update the checklist definitions data
        migrations.RunPython(
            populate_new_checklist_definitions, revert_new_checklist_definitions
        ),
    ]
